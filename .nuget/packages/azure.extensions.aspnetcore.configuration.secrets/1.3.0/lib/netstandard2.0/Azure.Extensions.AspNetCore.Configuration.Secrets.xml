<?xml version="1.0" encoding="utf-8"?>
<doc>
    <assembly>
        <name>Azure.Extensions.AspNetCore.Configuration.Secrets</name>
    </assembly>
    <members>
        <member name="T:Microsoft.Extensions.Configuration.AzureKeyVaultConfigurationExtensions">
            <summary>
            Extension methods for registering <see cref="T:Azure.Extensions.AspNetCore.Configuration.Secrets.AzureKeyVaultConfigurationProvider" /> with <see cref="T:Microsoft.Extensions.Configuration.IConfigurationBuilder" />.
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.Configuration.AzureKeyVaultConfigurationExtensions.AddAzureKeyVault(Microsoft.Extensions.Configuration.IConfigurationBuilder,System.Uri,Azure.Core.TokenCredential)">
            <summary>
            Adds an <see cref="T:Microsoft.Extensions.Configuration.IConfigurationProvider" /> that reads configuration values from the Azure KeyVault.
            </summary>
            <param name="configurationBuilder">The <see cref="T:Microsoft.Extensions.Configuration.IConfigurationBuilder" /> to add to.</param>
            <param name="vaultUri">The Azure Key Vault uri.</param>
            <param name="credential">The credential to use for authentication.</param>
            <returns>The <see cref="T:Microsoft.Extensions.Configuration.IConfigurationBuilder" />.</returns>
        </member>
        <member name="M:Microsoft.Extensions.Configuration.AzureKeyVaultConfigurationExtensions.AddAzureKeyVault(Microsoft.Extensions.Configuration.IConfigurationBuilder,System.Uri,Azure.Core.TokenCredential,Azure.Extensions.AspNetCore.Configuration.Secrets.KeyVaultSecretManager)">
            <summary>
            Adds an <see cref="T:Microsoft.Extensions.Configuration.IConfigurationProvider" /> that reads configuration values from the Azure KeyVault.
            </summary>
            <param name="configurationBuilder">The <see cref="T:Microsoft.Extensions.Configuration.IConfigurationBuilder" /> to add to.</param>
            <param name="vaultUri">Azure Key Vault uri.</param>
            <param name="credential">The credential to use for authentication.</param>
            <param name="manager">The <see cref="T:Azure.Extensions.AspNetCore.Configuration.Secrets.KeyVaultSecretManager" /> instance used to control secret loading.</param>
            <returns>The <see cref="T:Microsoft.Extensions.Configuration.IConfigurationBuilder" />.</returns>
        </member>
        <member name="M:Microsoft.Extensions.Configuration.AzureKeyVaultConfigurationExtensions.AddAzureKeyVault(Microsoft.Extensions.Configuration.IConfigurationBuilder,Azure.Security.KeyVault.Secrets.SecretClient,Azure.Extensions.AspNetCore.Configuration.Secrets.KeyVaultSecretManager)">
            <summary>
            Adds an <see cref="T:Microsoft.Extensions.Configuration.IConfigurationProvider" /> that reads configuration values from the Azure KeyVault.
            </summary>
            <param name="configurationBuilder">The <see cref="T:Microsoft.Extensions.Configuration.IConfigurationBuilder" /> to add to.</param>
            <param name="client">The <see cref="T:Azure.Security.KeyVault.Secrets.SecretClient" /> to use for retrieving values.</param>
            <param name="manager">The <see cref="T:Azure.Extensions.AspNetCore.Configuration.Secrets.KeyVaultSecretManager" /> instance used to control secret loading.</param>
            <returns>The <see cref="T:Microsoft.Extensions.Configuration.IConfigurationBuilder" />.</returns>
        </member>
        <member name="M:Microsoft.Extensions.Configuration.AzureKeyVaultConfigurationExtensions.AddAzureKeyVault(Microsoft.Extensions.Configuration.IConfigurationBuilder,System.Uri,Azure.Core.TokenCredential,Azure.Extensions.AspNetCore.Configuration.Secrets.AzureKeyVaultConfigurationOptions)">
            <summary>
            Adds an <see cref="T:Microsoft.Extensions.Configuration.IConfigurationProvider" /> that reads configuration values from the Azure KeyVault.
            </summary>
            <param name="configurationBuilder">The <see cref="T:Microsoft.Extensions.Configuration.IConfigurationBuilder" /> to add to.</param>
            <param name="vaultUri">Azure Key Vault uri.</param>
            <param name="credential">The credential to use for authentication.</param>
            <param name="options">The <see cref="T:Azure.Extensions.AspNetCore.Configuration.Secrets.AzureKeyVaultConfigurationOptions" /> to use.</param>
            <returns>The <see cref="T:Microsoft.Extensions.Configuration.IConfigurationBuilder" />.</returns>
        </member>
        <member name="M:Microsoft.Extensions.Configuration.AzureKeyVaultConfigurationExtensions.AddAzureKeyVault(Microsoft.Extensions.Configuration.IConfigurationBuilder,Azure.Security.KeyVault.Secrets.SecretClient,Azure.Extensions.AspNetCore.Configuration.Secrets.AzureKeyVaultConfigurationOptions)">
            <summary>
            Adds an <see cref="T:Microsoft.Extensions.Configuration.IConfigurationProvider" /> that reads configuration values from the Azure KeyVault.
            </summary>
            <param name="configurationBuilder">The <see cref="T:Microsoft.Extensions.Configuration.IConfigurationBuilder" /> to add to.</param>
            <param name="client">The <see cref="T:Azure.Security.KeyVault.Secrets.SecretClient" /> to use for retrieving values.</param>
            <param name="options">The <see cref="T:Azure.Extensions.AspNetCore.Configuration.Secrets.AzureKeyVaultConfigurationOptions" /> to use.</param>
            <returns>The <see cref="T:Microsoft.Extensions.Configuration.IConfigurationBuilder" />.</returns>
        </member>
        <member name="T:Azure.Extensions.AspNetCore.Configuration.Secrets.AzureKeyVaultConfigurationOptions">
            <summary>
            Options class used by the <see cref="T:Microsoft.Extensions.Configuration.AzureKeyVaultConfigurationExtensions" />.
            </summary>
        </member>
        <member name="M:Azure.Extensions.AspNetCore.Configuration.Secrets.AzureKeyVaultConfigurationOptions.#ctor">
            <summary>
            Creates a new instance of <see cref="T:Azure.Extensions.AspNetCore.Configuration.Secrets.AzureKeyVaultConfigurationOptions" />.
            </summary>
        </member>
        <member name="P:Azure.Extensions.AspNetCore.Configuration.Secrets.AzureKeyVaultConfigurationOptions.Manager">
            <summary>
            Gets or sets the <see cref="T:Azure.Extensions.AspNetCore.Configuration.Secrets.KeyVaultSecretManager" /> instance used to control secret loading.
            </summary>
        </member>
        <member name="P:Azure.Extensions.AspNetCore.Configuration.Secrets.AzureKeyVaultConfigurationOptions.ReloadInterval">
            <summary>
            Gets or sets the timespan to wait between attempts at polling the Azure Key Vault for changes. <code>null</code> to disable reloading.
            </summary>
        </member>
        <member name="T:Azure.Extensions.AspNetCore.Configuration.Secrets.AzureKeyVaultConfigurationProvider">
            <summary>
            An AzureKeyVault based <see cref="T:Microsoft.Extensions.Configuration.ConfigurationProvider" />.
            </summary>
        </member>
        <member name="M:Azure.Extensions.AspNetCore.Configuration.Secrets.AzureKeyVaultConfigurationProvider.#ctor(Azure.Security.KeyVault.Secrets.SecretClient,Azure.Extensions.AspNetCore.Configuration.Secrets.AzureKeyVaultConfigurationOptions)">
            <summary>
            Creates a new instance of <see cref="T:Azure.Extensions.AspNetCore.Configuration.Secrets.AzureKeyVaultConfigurationProvider" />.
            </summary>
            <param name="client">The <see cref="T:Azure.Security.KeyVault.Secrets.SecretClient" /> to use for retrieving values.</param>
            <param name="options">The <see cref="T:Azure.Extensions.AspNetCore.Configuration.Secrets.AzureKeyVaultConfigurationOptions" /> to configure provider behaviors.</param>
            <exception cref="T:System.ArgumentNullException">When either <paramref name="client" /> or <see cref="P:Azure.Extensions.AspNetCore.Configuration.Secrets.AzureKeyVaultConfigurationOptions.Manager" /> is <code>null</code>.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">When either <see cref="P:Azure.Extensions.AspNetCore.Configuration.Secrets.AzureKeyVaultConfigurationOptions.ReloadInterval" /> is not positive or <code>null</code>.</exception>
        </member>
        <member name="M:Azure.Extensions.AspNetCore.Configuration.Secrets.AzureKeyVaultConfigurationProvider.Load">
            <summary>
            Load secrets into this provider.
            </summary>
        </member>
        <member name="M:Azure.Extensions.AspNetCore.Configuration.Secrets.AzureKeyVaultConfigurationProvider.Dispose">
            <summary>
            Frees resources held by the <see cref="T:Azure.Extensions.AspNetCore.Configuration.Secrets.AzureKeyVaultConfigurationProvider" /> object.
            </summary>
        </member>
        <member name="M:Azure.Extensions.AspNetCore.Configuration.Secrets.AzureKeyVaultConfigurationProvider.Dispose(System.Boolean)">
            <summary>
            Frees resources held by the <see cref="T:Azure.Extensions.AspNetCore.Configuration.Secrets.AzureKeyVaultConfigurationProvider" /> object.
            </summary>
            <param name="disposing">true if called from <see cref="M:Azure.Extensions.AspNetCore.Configuration.Secrets.AzureKeyVaultConfigurationProvider.Dispose" />, otherwise false.</param>
        </member>
        <member name="T:Azure.Extensions.AspNetCore.Configuration.Secrets.AzureKeyVaultConfigurationSource">
            <summary>
            Represents Azure Key Vault secrets as an <see cref="T:Microsoft.Extensions.Configuration.IConfigurationSource" />.
            </summary>
        </member>
        <member name="M:Azure.Extensions.AspNetCore.Configuration.Secrets.AzureKeyVaultConfigurationSource.#ctor(Azure.Security.KeyVault.Secrets.SecretClient,Azure.Extensions.AspNetCore.Configuration.Secrets.AzureKeyVaultConfigurationOptions)">
            <summary>
            Creates a new instance of <see cref="T:Azure.Extensions.AspNetCore.Configuration.Secrets.AzureKeyVaultConfigurationSource" />.
            </summary>
            <param name="client">The <see cref="T:Azure.Security.KeyVault.Secrets.SecretClient" /> to use for retrieving values.</param>
            <param name="options">The <see cref="T:Azure.Extensions.AspNetCore.Configuration.Secrets.AzureKeyVaultConfigurationOptions" /> to configure provider behaviors.</param>
        </member>
        <member name="M:Azure.Extensions.AspNetCore.Configuration.Secrets.AzureKeyVaultConfigurationSource.Build(Microsoft.Extensions.Configuration.IConfigurationBuilder)">
            <summary>
            Builds the <see cref="T:Microsoft.Extensions.Configuration.IConfigurationProvider" /> for this source.
            </summary><param name="builder">The <see cref="T:Microsoft.Extensions.Configuration.IConfigurationBuilder" />.</param><returns>An <see cref="T:Microsoft.Extensions.Configuration.IConfigurationProvider" /></returns>
        </member>
        <member name="T:Azure.Extensions.AspNetCore.Configuration.Secrets.KeyVaultSecretManager">
            <summary>
            Default implementation of <see cref="T:Azure.Extensions.AspNetCore.Configuration.Secrets.KeyVaultSecretManager" /> that loads all secrets
            and replaces '--' with ':' in key names.
            </summary>
        </member>
        <member name="M:Azure.Extensions.AspNetCore.Configuration.Secrets.KeyVaultSecretManager.GetKey(Azure.Security.KeyVault.Secrets.KeyVaultSecret)">
            <summary>
            Maps secret to a configuration key.
            </summary>
            <param name="secret">The <see cref="T:Azure.Security.KeyVault.Secrets.KeyVaultSecret" /> instance.</param>
            <returns>Configuration key name to store secret value.</returns>
        </member>
        <member name="M:Azure.Extensions.AspNetCore.Configuration.Secrets.KeyVaultSecretManager.GetData(System.Collections.Generic.IEnumerable{Azure.Security.KeyVault.Secrets.KeyVaultSecret})">
            <summary>
            Converts a loaded list of secrets into a corresponding set of configuration key-value pairs.
            </summary>
            <param name="secrets">A set of secrets retrieved during <see cref="M:Azure.Extensions.AspNetCore.Configuration.Secrets.AzureKeyVaultConfigurationProvider.Load" /> call.</param>
            <returns>The dictionary of configuration key-value pairs that would be assigned to the <see cref="P:Microsoft.Extensions.Configuration.ConfigurationProvider.Data" />
            and exposed from the <see cref="T:Microsoft.Extensions.Configuration.IConfiguration" />.</returns>
            <exception cref="T:System.ArgumentNullException">When <paramref name="secrets" /> is <code>null</code>.</exception>
        </member>
        <member name="M:Azure.Extensions.AspNetCore.Configuration.Secrets.KeyVaultSecretManager.Load(Azure.Security.KeyVault.Secrets.SecretProperties)">
            <summary>
            Checks if <see cref="T:Azure.Security.KeyVault.Secrets.KeyVaultSecret" /> value should be retrieved.
            </summary>
            <param name="secret">The <see cref="T:Azure.Security.KeyVault.Secrets.SecretProperties" /> instance.</param>
            <returns><code>true</code> if secrets value should be loaded, otherwise <code>false</code>.</returns>
        </member>
        <member name="T:Azure.Core.Argument">
            <summary>
            Argument validation.
            </summary>
            <remarks>
              <para>This class should be shared via source using Azure.Core.props and contain only common argument validation.
                It is declared partial so that you can use the same familiar class name but extend it with project-specific validation.
                To extend the functionality of this class, just declare your own partial <see cref="T:Azure.Core.Argument" /> class with project-specific methods.
              </para>
              <para>
                Be sure to document exceptions thrown by these methods on your public methods.
              </para>
            </remarks>
        </member>
        <member name="M:Azure.Core.Argument.AssertNotNull``1(``0,System.String)">
            <summary>
            Throws if <paramref name="value" /> is null.
            </summary>
            <param name="value">The value to validate.</param>
            <param name="name">The name of the parameter.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="value" /> is null.</exception>
        </member>
        <member name="M:Azure.Core.Argument.AssertNotNull``1(System.Nullable{``0},System.String)">
            <summary>
            Throws if <paramref name="value" /> has not been initialized.
            </summary>
            <param name="value">The value to validate.</param>
            <param name="name">The name of the parameter.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="value" /> has not been initialized.</exception>
        </member>
        <member name="M:Azure.Core.Argument.AssertNotNullOrEmpty``1(System.Collections.Generic.IEnumerable{``0},System.String)">
            <summary>
            Throws if <paramref name="value" /> is null or an empty collection.
            </summary>
            <param name="value">The value to validate.</param>
            <param name="name">The name of the parameter.</param>
            <exception cref="T:System.ArgumentException"><paramref name="value" /> is an empty collection.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="value" /> is null.</exception>
        </member>
        <member name="M:Azure.Core.Argument.AssertNotNullOrEmpty(System.String,System.String)">
            <summary>
            Throws if <paramref name="value" /> is null or an empty string.
            </summary>
            <param name="value">The value to validate.</param>
            <param name="name">The name of the parameter.</param>
            <exception cref="T:System.ArgumentException"><paramref name="value" /> is an empty string.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="value" /> is null.</exception>
        </member>
        <member name="M:Azure.Core.Argument.AssertNotNullOrWhiteSpace(System.String,System.String)">
            <summary>
            Throws if <paramref name="value" /> is null, an empty string, or consists only of white-space characters.
            </summary>
            <param name="value">The value to validate.</param>
            <param name="name">The name of the parameter.</param>
            <exception cref="T:System.ArgumentException"><paramref name="value" /> is an empty string or consists only of white-space characters.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="value" /> is null.</exception>
        </member>
        <member name="M:Azure.Core.Argument.AssertNotDefault``1(``0@,System.String)">
            <summary>
            Throws if <paramref name="value" /> is the default value for type <typeparamref name="T" />.
            </summary>
            <typeparam name="T">The type of structure to validate which implements <see cref="T:System.IEquatable`1" />.</typeparam>
            <param name="value">The value to validate.</param>
            <param name="name">The name of the parameter.</param>
            <exception cref="T:System.ArgumentException"><paramref name="value" /> is the default value for type <typeparamref name="T" />.</exception>
        </member>
        <member name="M:Azure.Core.Argument.AssertInRange``1(``0,``0,``0,System.String)">
            <summary>
            Throws if <paramref name="value" /> is less than the <paramref name="minimum" /> or greater than the <paramref name="maximum" />.
            </summary>
            <typeparam name="T">The type of to validate which implements <see cref="T:System.IComparable`1" />.</typeparam>
            <param name="value">The value to validate.</param>
            <param name="minimum">The minimum value to compare.</param>
            <param name="maximum">The maximum value to compare.</param>
            <param name="name">The name of the parameter.</param>
        </member>
        <member name="M:Azure.Core.Argument.AssertEnumDefined(System.Type,System.Object,System.String)">
            <summary>
            Throws if <paramref name="value" /> is not defined for <paramref name="enumType" />.
            </summary>
            <param name="enumType">The type to validate against.</param>
            <param name="value">The value to validate.</param>
            <param name="name">The name of the parameter.</param>
            <exception cref="T:System.ArgumentException"><paramref name="value" /> is not defined for <paramref name="enumType" />.</exception>
        </member>
        <member name="M:Azure.Core.Argument.CheckNotNull``1(``0,System.String)">
            <summary>
            Throws if <paramref name="value" /> has not been initialized; otherwise, returns <paramref name="value" />.
            </summary>
            <param name="value">The value to validate.</param>
            <param name="name">The name of the parameter.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="value" /> has not been initialized.</exception>
        </member>
        <member name="M:Azure.Core.Argument.CheckNotNullOrEmpty(System.String,System.String)">
            <summary>
            Throws if <paramref name="value" /> is null or an empty string; otherwise, returns <paramref name="value" />.
            </summary>
            <param name="value">The value to validate.</param>
            <param name="name">The name of the parameter.</param>
            <exception cref="T:System.ArgumentException"><paramref name="value" /> is an empty string.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="value" /> is null.</exception>
        </member>
        <member name="M:Azure.Core.Argument.AssertNull``1(``0,System.String,System.String)">
            <summary>
            Throws if <paramref name="value" /> is not null.
            </summary>
            <param name="value">The value to validate.</param>
            <param name="name">The name of the parameter.</param>
            <param name="message">The error message.</param>
            <exception cref="T:System.ArgumentException"><paramref name="value" /> is not null.</exception>
        </member>
    </members>
</doc>
